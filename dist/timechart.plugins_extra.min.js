this.TimeChart=this.TimeChart||{},this.TimeChart.plugins_extra=function(t,e){"use strict";return t.EventsPlugin=class{constructor(t){this.data=t??[]}apply(t){const a=e.select(t.svgLayer.svgNode).append("svg");return a.append("style").text("\n.timechart-event-line {\n    stroke: currentColor;\n    stroke-width: 1;\n    stroke-dasharray: 2 1;\n    opacity: 0.7;\n}"),t.model.resized.on(((e,n)=>{a.attr("height",n-t.options.paddingBottom)})),t.model.updated.on((()=>{const e=a.selectAll("g").data(this.data);e.exit().remove();const n=e.enter().append("g");n.append("line").attr("y2","100%").attr("class","timechart-event-line"),n.append("text").attr("x",5).attr("y",t.options.paddingTop).attr("dy","0.8em");const r=e.merge(n);r.attr("transform",(e=>`translate(${t.model.xScale(e.x)}, 0)`)),r.select("text").text((t=>t.name))})),this}},Object.defineProperty(t,"__esModule",{value:!0}),t}({},d3);
//# sourceMappingURL=timechart.plugins_extra.min.js.map
